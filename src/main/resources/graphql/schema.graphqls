scalar Date

type Query {
    userById(id : ID!) : User
    userList(page : Int, size: Int, sort: Sort) : [User!]!
}

input Sort {
    orders: [Order!]
}

input Order {
    direction: Direction,
    property: String
}

enum Direction {
    ASC, DESC
}

type User {
    id : ID!
    username : String!
    email: String!
    admin : Boolean!
    loginTime : Date
    createTime : Date
    updateTime : Date
}

type Article {
    id : ID!
    title : String!
    content: String
    auditor : ID!
    labels : [Label]!
    topping : Boolean!
    status : Boolean!
    createTime : Date!
    updateTime : Date
}

type Comment {
    id : ID!
    content: String!
    user : ID!
    article : ID!
    ip : String
    status : Boolean!
    createTime : Date!
    updateTime : Date
}

type Label {
    id : ID!
    name: String!
}
